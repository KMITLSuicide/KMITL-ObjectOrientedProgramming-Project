@startuml

actor User
participant Controller
participant Course
participant "User" as UserClass

User -> Controller: edit_quiz(course_id, quiz_id, coures_material_data, response, current_user)
activate Controller


Controller -> Controller: search_course_by_id(course_uuid)

alt Course found
    alt Course is not None
        Controller -> Controller: search_teacher_by_course(course)
        Controller -> UserClass: Depends(get_current_user)
        activate UserClass
        UserClass --> Controller: user
        deactivate UserClass
        Controller --> User: "Unauthorized"
        
        Controller -> Course: search_quiz_by_id(quiz_id)
        activate Course
        Course --> Controller: quiz
        deactivate Course
        alt Quiz found
            alt Quiz is not None
                Controller -> Course: coures_material_data.name
                activate Course
                Course --> Controller: name
                deactivate Course
                Controller -> Course: coures_material_data.description
                activate Course
                Course --> Controller: description
                deactivate Course
                Controller -> Course: quiz.edit(name, description)
                activate Course
                Course --> Controller: Quiz edited
                deactivate Course
                Controller -> Controller: get_quiz(course_id, quiz_id, current_user)
                Controller --> User: course_learn_quiz
            else Quiz not found
                Controller --> User: "quiz not found"
            end
        end
    else Course not found
        Controller --> User: "Course not found"
    end
end

@enduml