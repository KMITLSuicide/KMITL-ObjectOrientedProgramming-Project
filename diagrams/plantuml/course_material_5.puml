@startuml Udemy Sequence Diagram (Question Operations)

actor "User" as UserActor
participant "UI" as Server
participant Controller
participant Course
participant "User" as UserClass

UserActor -> Server: edit_question(course_id, quiz_id, question_id, course_material_data, response, current_user)
activate Server
Server -> Controller: search_course_by_id(course_id)
activate Controller
Controller --> Server: course
deactivate Controller
Server -> UserClass: search_teacher_by_course(course)
activate UserClass
UserClass --> UserClass: check_authorization(current_user, teacher)
UserClass --> Server: teacher
deactivate UserClass
Server -> Controller: search_quiz_by_id(quiz_id)
activate Controller
Controller --> Server: quiz
deactivate Controller
Server -> Course: search_question_by_id(question_id)
activate Course
Course --> Server: question
deactivate Course
Server -> Course: edit_question(question, question_text, is_correct)
activate Course
Course --> Server: success, message
deactivate Course
Server --> UserActor: get_question(course_id, quiz_id, question_id, current_user)
deactivate Server

UserActor -> Server: delete_question(course_id, quiz_id, question_id, current_user, response)
activate Server
Server -> Controller: search_course_by_id(course_id)
activate Controller
Controller --> Server: course
deactivate Controller
Server -> UserClass: search_teacher_by_course(course)
activate UserClass
UserClass --> UserClass: check_authorization(current_user, teacher)
UserClass --> Server: teacher
deactivate UserClass
Server -> Controller: search_quiz_by_id(quiz_id)
activate Controller
Controller --> Server: quiz
deactivate Controller
Server -> Course: search_question_by_id(question_id)
activate Course
Course --> Server: question
deactivate Course
Server -> Course: remove_question(question)
activate Course
Course --> Server: success, message
deactivate Course
Server --> UserActor: get_learn_course_materials(course_id, current_user)
deactivate Server

UserActor -> Server: add_question(course_id, quiz_id, quiz_material_data, response, current_user)
activate Server
Server -> Controller: search_course_by_id(course_id)
activate Controller
Controller --> Server: course
deactivate Controller
Server -> UserClass: search_teacher_by_course(course)
activate UserClass
UserClass --> UserClass: check_authorization(current_user, teacher)
UserClass --> Server: teacher
deactivate UserClass
Server -> Controller: search_quiz_by_id(quiz_id)
activate Controller
Controller --> Server: quiz
deactivate Controller
Server -> Course: add_question(question)
activate Course
Course --> Server: question
deactivate Course
Server --> UserActor: get_question(course_id, quiz_id, question.get_id(), current_user)
deactivate Server

@enduml